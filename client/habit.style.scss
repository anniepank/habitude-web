habit > .wrapper {
  width: 50%;
  margin: 25px auto;
}

.habit-border:hover {
  box-shadow: 0, 0, 10px, rgba(0,0,0,0.5);
  border-color: #aaa
}

.info {
  width:75%;
  margin:0;
  margin-left:5%;
  display:inline-block;
}

.checkboxContainer {
  padding-top: 20px;
}

.habitName {
  margin: 0;
  padding-bottom: 5px;
  font-size: 27px;
  font-weight: 100;
  border-bottom: 1px solid #e0e1dd;
}

.habitNameRef {
  color: #767a7b;
}

.habitNameRef:hover {
  text-decoration: none;
  color: #018C9F;
}

.close {
  color: #aaa;
  margin-right: 10px;
}

.close:hover {
  color: #777;
}

label {
    display: inline-block; // to make it easier to click
    color: #26C4D8;
    cursor: pointer;
    position: relative; // important

    // Now we'll create the checkbox object

    span {
      display: inline-block;
      position: relative;
      background-color: transparent;
      width: 25px;
      height: 25px;
      transform-origin: center;
      border: 2px solid #26C4D8;
      border-radius: 50%;
      vertical-align: -6px;
      margin-right: 10px;
      transition: background-color 150ms 200ms, transform 350ms cubic-bezier(.78,-1.22,.17,1.89); // custom ease effect for bouncy animation

  // Now we'll create the "tick" using pseudo elements - those will be basically two lines that will be rotated to form the "tick"

    &:before {
      content: "";
      width: 0px;
      height: 2px;
      border-radius: 2px; // so that the tick has nice rounded look
      background: #26C4D8;
      position: absolute;
      transform: rotate(45deg);
      top: 10px; // you'll need to experiment with placement depending on the dimensions you've chosen
      left: 7px; // you'll need to experiment with placement depending on the dimensions you've chosen
      transition: width 50ms ease 50ms;
      transform-origin: 0% 0%;
    }

    &:after {
      content: "";
      width: 0;
      height: 2px;
      border-radius: 2px; // so that the tick has nice rounded look
      background: #26C4D8;
      position: absolute;
      transform: rotate(305deg);
      top: 14px; // you'll need to experiment with placement depending on the dimensions you've chosen
      left: 9px; // you'll need to experiment with placement depending on the dimensions you've chosen
      transition: width 50ms ease;
      transform-origin: 0% 0%;
    }
  }
  // Time to add some life to it

  &:hover {
    span {
      &:before {
        width: 5px;
        transition: width 100ms ease;
      }

      &:after {
        width: 10px;
        transition: width 150ms ease 100ms;
      }
    }
  }
}

input[type="checkbox"] {
    display: none; // hide the system checkbox

  // Let's add some effects after the checkbox is checked

  &:checked {
    + label {
      span {
        background-color: #26C4D8;
        transform: scale(1.25); // enlarge the box

        &:after {
          width: 10px;
          background: #1790b5;
          transition: width 150ms ease 100ms; // enlarge the tick
        }

        &:before {
          width: 5px;
          background: #1790b5;
          transition: width 150ms ease 100ms; // enlarge the tick
        }
      }

      &:hover { // copy the states for onMouseOver to avoid flickering
        span {
          background-color: #26C4D8;
          transform: scale(1.25); // enlarge the box

          &:after {
            width: 10px;
            background: #1790b5;
            transition: width 150ms ease 100ms; // enlarge the tick
          }

          &:before {
            width: 5px;
            background: #1790b5;
            transition: width 150ms ease 100ms; // enlarge the tick
          }
        }
      }
    }
  }
}

.button {
  width: 50%;
  margin: 10px auto;
  padding: 20px;
  border: 2px solid #eee;
  text-align: center;
  text-transform: uppercase;
  position: relative;
  overflow:hidden;
  transition: .3s;
  &:after {
    position: absolute;
    transition: .3s;
    content: '';
    width: 0;
    left: 50%;
    bottom: 0;
    height: 3px;
    background: #eee;
  }
  &:nth-of-type(1):after {
    height: 120%;
    left: -10%;
    transform: skewX(15deg);
    z-index: -1;
  }
  &:hover {
    cursor: pointer;
    &:after {
      width: 100%;
      left: 0;
    }
    &:nth-of-type(1) {
      color: #26C2D8;
    }
    &:nth-of-type(1):after {
      left: -10%;
      width: 120%;
    }
  }
}
